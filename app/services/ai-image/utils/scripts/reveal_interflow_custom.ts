export const reveal_interflow_custom = `import InterflowCustom from 0xfe514356a985ec2a \n import NonFungibleToken from 0x631e88ae7f1d7c20 \n import MetadataViews from 0x631e88ae7f1d7c20 \n transaction( recipient: Address, nftId: UInt64 ) { \n let minter: &InterflowCustom.NFTMinter \n let recipientCollectionRef: &{InterflowCustom.InterflowCustomCollectionPublic} \n prepare(signer: AuthAccount) { \n self.minter = signer.borrow<&InterflowCustom.NFTMinter>(from: InterflowCustom.MinterStoragePath) ?? panic("Account does not store an object at the specified path") \n self.recipientCollectionRef = getAccount(recipient).getCapability(InterflowCustom.CollectionPublicPath).borrow<&{InterflowCustom.InterflowCustomCollectionPublic}>() ?? panic("Could not get receiver reference to the NFT Collection") \n } \n execute { \n let nftRef = self.recipientCollectionRef.borrowInterflowCustom(id: nftId)! \n self.minter.revealNft(nft: nftRef) \n }}`